@import "variables";
@import "mixin";
@import "layers";

.city {
  @include transformIsometric;
  z-index: layer-get("base");
  margin-top: 200px;
}


/*----------------
  component
*/

.area {
  display: flex;
  flex-wrap: nowrap;
  flex-direction: row-reverse;
}

.block {
  flex-shrink: 0;
  position: relative;
  display: flex;
  flex-direction: row-reverse;
  flex-wrap: wrap;
  max-width: $squareSize * 2;

  @for $i from 1 through 10 {
    &.wide#{$i} {
      max-width: $squareSize * $i;
    }
  }
}

.address {
  @include defaultGroundBase();
}

.street {
  position: relative;
  top: $squareDepth;
  left: -$squareDepth;
  z-index: layer-get("street");
  flex-shrink: 0;
  width: $streetWidth;

  background-image:
    linear-gradient(to  bottom, $streetBaseColor, $streetBaseColor 20px, transparent 20px, transparent 80px, $streetBaseColor 80px, $streetBaseColor),
    linear-gradient(to right, $streetBaseColor, $streetBaseColor 48%, $streetLineColor 48%, $streetLineColor 52%, $streetBaseColor 52%, $streetBaseColor);
  background-size: 100px 100px, 100px 100px;
  background-repeat: repeat-y;
}

.avenue {
  position: relative;
  right: $squareDepth;
  z-index: layer-get("street");
  width: 100%;
  height: 100px;
  margin-top: 10px;

  background-image:
    linear-gradient(to right, $streetBaseColor, $streetBaseColor 20px, transparent 20px, transparent 80px, $streetBaseColor 80px, $streetBaseColor),
    linear-gradient(to bottom, $streetBaseColor, $streetBaseColor 48%, $streetLineColor 48%, $streetLineColor 52%, $streetBaseColor 52%, $streetBaseColor);
  background-size: 100px 100px, 100px 100px;
  background-repeat: repeat-x;

  + .area {
    margin-top: -10px;
  }

  + .avenue {
    margin-top: 0;
  }

}

/*-------------------------
  building
 */

.bill {
  position: absolute;
  z-index: layer-get("building" "base");
  bottom: 0;
  left: 100px * 0.5;
  width: 100px;
  height: 100px;
  transform: rotate(45deg) skewY(-45deg) scale(0.7, 1);
  background-color: darken($billStandardColor, 20%);

  &:before {
    content: "";
    position: absolute;
    top: -115px;
    right: 45px;
    transform: skewX(35deg) scale(1, 1.3);

    width: 100px;
    height: 100px;
    background-color: lighten($billStandardColor, 8%);
  }

  &:after {
    content: "";
    position: absolute;
    left: -100px;
    top: -130px;
    width: 100px;
    height: 100px;
    transform: skewY(55deg) translate(5px, 57px) scaleX(0.9);
    background-color: $billStandardColor;
  }

  /* building height */
  @for $i from 1 through 4 {
    $num: $i * 100;
    &.height#{$num} {
      left: #{$num * 0.5}px;
      height: #{$num}px;
      &:after {
        height: #{$num}px;
      }
    }
  }

  /* building color */
  // @ToDo refactor
  &.colorWhite {
    $billColor: $billStandardColor;
    $billDarkColor: darken($billStandardColor, 20%);
    $billLightColor: lighten($billStandardColor, 8%);

    background-image:
    linear-gradient(to top,
      $billDarkColor,
      $billDarkColor 40px,
      transparent 40px,
      transparent
    ),
    linear-gradient(to right,
      $billDarkColor,
      $billDarkColor 10%,
      transparent 10%,
      transparent 90%,
      $billDarkColor 90%,
      $billDarkColor
    ),
    repeating-linear-gradient(to bottom,
      $billDarkColor,
      $billDarkColor 20px,
      $billWindowColor 20px,
      $billWindowColor 50px,
      $billDarkColor 50px,
      $billDarkColor 70px
    );

    &:before {
      background-color: $billLightColor;
    }

    &:after {
      background-image:
      linear-gradient(to top,
        $billColor,
        $billColor 40px,
        transparent 40px,
        transparent
      ),
      linear-gradient(to right,
        $billColor,
        $billColor 10%,
        transparent 10%,
        transparent 90%,
        $billColor 90%,
        $billColor
      ),

      repeating-linear-gradient(to bottom,
        $billColor,
        $billColor 20px,
        $billWindowColor 20px,
        $billWindowColor 50px,
        $billColor 50px,
        $billColor 70px
      );
    }
  }

  &.colorBlue {
    $billColor: $billBlueColor;
    $billDarkColor: darken($billBlueColor, 20%);
    $billLightColor: lighten($billBlueColor, 8%);

    background-image:
    linear-gradient(to bottom,
      transparent,
      transparent 90%,
      $billDarkColor 90%,
      $billDarkColor
    ),
    linear-gradient(to right,
      $billDarkColor,
      $billDarkColor 10%,
      transparent 10%,
      transparent 90%,
      $billDarkColor 90%,
      $billDarkColor
    ),
    repeating-linear-gradient(to bottom,
      $billDarkColor,
      $billDarkColor 20px,
      $billWindowColor 20px,
      $billWindowColor 50px,
      $billDarkColor 50px,
      $billDarkColor 70px
    );

    &:before {
      background-color: $billLightColor;
    }

    &:after {
    background-image:
      linear-gradient(to bottom,
        transparent,
        transparent 90%,
        $billColor 90%,
        $billColor
      ),
      linear-gradient(to right,
        $billColor,
        $billColor 10%,
        transparent 10%,
        transparent 90%,
        $billColor 90%,
        $billColor
      ),

      repeating-linear-gradient(to bottom,
        $billColor,
        $billColor 20px,
        $billWindowColor 20px,
        $billWindowColor 50px,
        $billColor 50px,
        $billColor 70px
      );
    }
  }

  &.colorGreen {
    background-color: darken($billGreenColor, 20%);
    &:before {
      background-color: lighten($billGreenColor, 20%);
    }
    &:after {
      background-color: $billGreenColor;
    }
  }
}

/*-------------------------
  tree
 */

.tree {
  position: relative;
  width: 50px;
  height: 50px;
  //transform: skewX(-45deg) translate(20px, -60px);
  z-index: layer-get("tree" "base");

  &:before {
    content: "";
    position: absolute;
    z-index: layer-get("tree" "trunk");
    width: 10px;
    height: 30px;
    background-image: linear-gradient(to right top, #8D7A5A, #8D7A5A 10%, #9B8963);
    left: 21px;
    bottom: 10px;
    border-radius: 0 0 4px 8px;
    transform: skewX(-45deg);
  }

  &:after {
    content: "";
    position: absolute;
    z-index: layer-get("tree" "leaves");
    transform: skewX(-45deg);
  }

  &.slender {
    &:after {
      bottom: 30px;
      left: 50px;
      width: 35px;
      height: 70px;
      border-radius: 100% 100% 80% 80%;
      background-image:
        linear-gradient(to left top, #699C6F, #699C6F 20%, transparent, transparent 90%, #478146),
        linear-gradient(to top, #699C6F, #A1BB7B);
      box-shadow: 1px 1px 1px 0 #478146;
    }
  }

  &.thick {
    &:after {
      bottom: 12px;
      left: 20px;
      width: 56px;
      height: 65px;
      background: linear-gradient(to top, #98A84A, #8A9843);
      transform: rotateZ(-130deg);
      border-radius: 80% 100% / 64% 100%;


      /*
      box-shadow: 25px 25px 0 3px saturate(#226143, 80%),
      23px -10px 0 11px saturate(#226143, 99%);
      */
    }
  }
  /*

  &:after {
    content: "";
    position: absolute;
    z-index: layer-get("tree" "leaves");
    bottom: -30px;
    left: -10px;
    width: 50px;
    height: 40px;
    border-radius: 50%;
    background: saturate(#226143, 30%);

    transform: skewX(8deg);
    box-shadow:
      25px 25px 0 3px saturate(#226143, 80%),
      23px -10px 0 11px saturate(#226143, 99%);
  }

  &:nth-of-type(1) {
    &:after {
      box-shadow:
        random(30) + px 25px 0 3px saturate(#226143, 80%),
        random(30) + px -10px 0 11px saturate(#226143, 99%);
    }
  }

  &:nth-of-type(2) {
    &:after {
      box-shadow:
        random(30) + px 25px 0 3px saturate(#226143, 80%),
        random(30) + px -10px 0 11px saturate(#226143, 99%);
    }
  }

  &:nth-of-type(3) {
    &:after {
      box-shadow:
        random(30) + px 25px 0 3px saturate(#226143, 80%),
        random(30) + px -10px 0 11px saturate(#226143, 99%);
    }
  }
  */


}












